;
;;  Layout definitions
;;  for Portable Keyboard Layout by Farkas Máté [https://github.com/Portable-Keyboard-Layout]
;;  edition DreymaR (Øystein B Gadmar, 2015-)   [https://github.com/DreymaR/BigBagKbdTrixPKL]
;
;;  To use this layout, edit the EPKL_Layouts .ini 'layout = ' and/or Type/Mod/ID/etc entries.
;;  A simpler way is the Layout/Settings dialog from the EPKL tray menu (or try Ctrl+Shift+6).
;;  Alternatively, run EPKL in compactMode with the layout's files in the main program folder.
;
;;  This is an EPKL style layout.ini file
;;    - It may point to a base layout, Extend and DeadKey table files containing layout parts
;;    - The layout.ini file holds changes from the base layout, remaps and other layout info
;

[information]
layoutName      = VirtualKey QWERTY (US/ANSI key codes)
layoutCode      = QWE-VK-ANSI
localeID        = 00000409

copyright       = DreymaR (GPL v3)
company         = DreymaR
homepage        = http://forum.colemak.com/viewtopic.php?id=1467
version         = 4.0

[pkl]
KbdType         = ANS 							; @K below: ANS (ANSI 101/104 key), ISO (Intl. 102/105 key)
;;  A layout may augment its base one. The Remap file contains ergo and other layout remaps.
;;  The Extend/dkList/string files hold Extend, dead key and literal/PowerString definitions.
baseLayout      = ..\BaseLayout_Cmk-VK

;;  The "layout/soft" ScanCode map is for typing, the "extend/hard" one for Extend mappings.
mapSC_layout    = QWERTY 						; Angle_@K, AWide_@K, Cmk-CAW-_@K etc - see _eD_Remap.ini
;mapSC_extend    = -- 							; As _layout but only "hard" (non-letter) mods

;;  Background image (key caps etc) and a background color for the image panel
;img_bgImage     = Files\ImgBackground\Bg_FingerShui-eD_@K.png
img_bgImage     = Files\ImgBackground\Bg_Nice-Tinted_@K.png
;img_bgColor     = 999999
;;  On/Off, Extend, Dead key and Shift state marker (e.g., MagBlob, GrnBlob) images
icons_OnOff     = Files\ImgIcons\Q_
img_Extend1     = Files\ImgExtend\@K_Ext1.png
img_Extend2     = Files\ImgExtend\@K_Ext2.png
img_Extend3     = Files\ImgExtend\@K_Ext3.png
;img_DKeyDir     = .\DeadkeyImg
;img_ModsDir     = Files\ImgModStates\GrnBlob

[layout]
;;  Override keys from the base layout with mappings here. A -1 or "VK" entry resets that key.
;;
;SCAN = VKEY    	VirtualKey

[old-layout]
;;  These mappings are left in here in case someone wants to start from a full QWERTY mapping.
;;  They won't be used unless they're in the [layout] section; don't use the QWERTY mapSC then.
QW_GR = vc_GR   	VirtualKey	; US `~ (ANSI _3, ISO _5)
QW_1  = 1       	VirtualKey	; US 1
QW_2  = 2       	VirtualKey	; US 2
QW_3  = 3       	VirtualKey	; US 3
QW_4  = 4       	VirtualKey	; US 4
QW_5  = 5       	VirtualKey	; US 5
QW_6  = 6       	VirtualKey	; US 6
QW_7  = 7       	VirtualKey	; US 7
QW_8  = 8       	VirtualKey	; US 8
QW_9  = 9       	VirtualKey	; US 9
QW_0  = 0       	VirtualKey	; US 0
QW_MN = vc_MN   	VirtualKey	; US -_ (ANSI _MINUS, ISO _PLUS)
QW_PL = vc_PL   	VirtualKey	; US =+ (ANSI _PLUS, ISO _4)

QW_Q  = Q       	VirtualKey	; QW Q
QW_W  = W       	VirtualKey	; QW W
QW_E  = E       	VirtualKey	; QW E
QW_R  = R       	VirtualKey	; QW R
QW_T  = T       	VirtualKey	; QW T
QW_Y  = Y       	VirtualKey	; QW Y
QW_U  = U       	VirtualKey	; QW U
QW_I  = I       	VirtualKey	; QW I
QW_O  = O       	VirtualKey	; QW O
QW_P  = P       	VirtualKey	; QW P
QW_LB = vc_LB   	VirtualKey	; US [{ (ANSI _4, ISO _6)
QW_RB = vc_RB   	VirtualKey	; US ]} (ANSI _6, ISO _1)

QW_A  = A       	VirtualKey	; QW A
QW_S  = S       	VirtualKey	; QW S
QW_D  = D       	VirtualKey	; QW D
QW_F  = F       	VirtualKey	; QW F
QW_G  = G       	VirtualKey	; QW G
QW_H  = H       	VirtualKey	; QW H
QW_J  = J       	VirtualKey	; QW J
QW_K  = K       	VirtualKey	; QW K
QW_L  = L       	VirtualKey	; QW L
QW_SC = vc_SC   	VirtualKey	; QW ;: (ANSI _1, ISO _3)
QW_QU = vc_QU   	VirtualKey	; US '" (ANSI/ISO _7)
QW_BS = vc_BS   	VirtualKey	; US \| (ANSI _5, ISO _2)

QW_LG = vc_LG   	VirtualKey	; US <> (ISO _102)
QW_Z  = Z       	VirtualKey	; QW Z
QW_X  = X       	VirtualKey	; QW X
QW_C  = C       	VirtualKey	; QW C
QW_V  = V       	VirtualKey	; QW V
QW_B  = B       	VirtualKey	; QW B
QW_N  = N       	VirtualKey	; QW N
QW_M  = M       	VirtualKey	; QW M
QW_CM = vc_CM   	VirtualKey	; US ,< (ANSI/ISO _COMMA)
QW_PD = vc_PD   	VirtualKey	; US .> (ANSI/ISO _PERIOD)
QW_SL = vc_SL   	VirtualKey	; US /? (ANSI _2, ISO _MINUS)
QWSPC = SPACE   	VirtualKey	; Space
