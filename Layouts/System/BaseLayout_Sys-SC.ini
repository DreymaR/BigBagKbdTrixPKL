;
;;  ================================================================================================================================================================
;;  Layout Definition file
;;  for EPiKaL Portable Keyboard Layout (EPKL) by Øystein "DreymaR" Bech-Aase (2015-), based on PKL by Máté Farkas (2008-2010).
;
;;  - The Layout.ini file may point to a BaseLayout as well as Extend/DeadKey/Compose/etc table files.
;;  - It can override BaseLayout, EPKL_Layouts_Override and EPKL_Layouts mappings, add key (re)maps and other layout info.
;;  - It can be overridden by a Layout_Override user file located in the same layout folder as itself.
;;  - To select a layout, you can use the Layout/Settings dialog from the EPKL tray menu (or Ctrl+Shift+6).
;;  - Another way is to edit the EPKL_Layouts(_Override) 'layout = ' line and/or Type/Mod/ID/etc entries.
;;  - Alternatively, run EPKL in compactMode with the layout's files directly inside the main program folder.
;;  ================================================================================================================================================================
;
;;  Base Layout file info:
;;  - This file defines a useable layout in the EPKL format.
;;  - It is pointed to and overridden by Layout.ini files for key remaps, mapping overrides etc.
;

[information]
layoutName      = System passthrough layout (ScanCode)
layoutCode      = Sys-SC
localeID        = 00000409

copyright       = DreymaR (GPL v3)
company         = DreymaR
homepage        = https://dreymar.colemak.org/layers-colemaked.html
version         = 4.0

[pkl]
;;  A layout may augment its base one. The Remap file contains ergo and other layout remaps.
;;  The Extend/dkList/string files hold Extend, dead key and literal/PowerString definitions.
;baseLayout      = ..\BaseLayout_Cmk-VK
;remapsFile      = Files\_eD_Remap.ini
;extendFile      = Files\_eD_Extend.ini
;dkListFile      = Files\_eD_DeadKeys.ini
;stringFile      = Files\_eD_PwrStrings.ini
;cmposrFile      = Files\_eD_Compose.ini

;;  The "layout/soft" ScanCode map is for typing, the "extend/hard" one for Extend mappings.
;;  The "mechanical layout" VirtualKey map is mainly for ANS(I)/ISO/JIS conversion.
;mapSC_layout    = Angle_@K 					; Angle_@K, AWide_@K, Cmk-CAW-_@K etc - see _eD_Remap.ini
;mapSC_extend    = Angle_@K 					; Only "hard" (non-letter) mods.
;mapVK_mecSym    = --    						; Convert KbdType. Beware of different ISO VK codes!

;;  DreymaR's Cmk-IBM help images (5*14 keys @96dpi)
img_sizeWH      = 812,282 						; (541,188 @64dpi)
;;  DreymaR's compact help images (3*10 keys @48dpi)
;img_sizeWH      = 292,85 						; ISO-Angle 298. Ortho 276. Others 292.
;;  Scaling factor for help images, in %. (96->64)dpi = 66.66%; (96->48)dpi = 50%
img_scale       = 100

;;  Background image (key caps etc) and a background color for the image panel
img_bgImage     = Files\ImgBackground\Bg_Nice-Tinted_@K.png
;img_bgImage     = Files\ImgBackground\Bg_FingerShui-eD_@K.png
;img_bgColor     = 999999
;;  On/Off, Extend, Dead key and Shift state marker (e.g., MagBlob, GrnBlob) images
;icons_OnOff     = Files\ImgIcons\PKL_
img_Extend1     = Files\ImgExtend\@K_Ext1.png
img_Extend2     = Files\ImgExtend\@K_Ext2.png
img_Extend3     = Files\ImgExtend\@K_Ext3.png
img_Extend4     = Files\ImgExtend\_Empty_Ext.png
;img_DKeyDir     = .\DeadkeyImg
img_ModsDir     = Files\ImgModStates\GrnBlob

[layout]
;;  - These mappings override any key mappings in the _Layouts_ files.
;;  - They may in turn be overridden by mappings in the current Layout.ini file.
;
shiftStates    =			0	:	1	:	2	:	6	:	7		;	8	:	9	:	e	:	f	; For System layouts we have no idea what the state images should be
;SCAN = VKEY    	MappingType
QW_GR = System  						; SC029: US `~ (ANSI _3, ISO _5)
QW_1  = System  						; SC002: US 1
QW_2  = System  						; SC003: US 2
QW_3  = System  						; SC004: US 3
QW_4  = System  						; SC005: US 4
QW_5  = System  						; SC006: US 5
QW_6  = System  						; SC007: US 6
QW_7  = System  						; SC008: US 7
QW_8  = System  						; SC009: US 8
QW_9  = System  						; SC00a: US 9
QW_0  = System  						; SC00b: US 0
QW_MN = System  						; SC00c: US -_ (ANSI _MINUS, ISO _PLUS)
QW_PL = System  						; SC00d: US =+ (ANSI _PLUS, ISO _4)

QW_Q  = System  						; SC010: QW Q
QW_W  = System  						; SC011: QW W
QW_E  = System  						; SC012: QW E
QW_R  = System  						; SC013: QW R
QW_T  = System  						; SC014: QW T
QW_Y  = System  						; SC015: QW Y
QW_U  = System  						; SC016: QW U
QW_I  = System  						; SC017: QW I
QW_O  = System  						; SC018: QW O
QW_P  = System  						; SC019: QW P
QW_LB = System  						; SC01a: US [{ (ANSI _4, ISO _6)
QW_RB = System  						; SC01b: US ]} (ANSI _6, ISO _1)

QW_A  = System  						; SC01e: QW A
QW_S  = System  						; SC01f: QW S
QW_D  = System  						; SC020: QW D
QW_F  = System  						; SC021: QW F
QW_G  = System  						; SC022: QW G
QW_H  = System  						; SC023: QW H
QW_J  = System  						; SC024: QW J
QW_K  = System  						; SC025: QW K
QW_L  = System  						; SC026: QW L
QW_SC = System  						; SC027: QW ;: (ANSI _1, ISO _3)
QW_QU = System  						; SC028: US '" (ANSI/ISO _7)
QW_BS = System  						; SC02b: US \| (ANSI _5, ISO _2)

QW_LG = System  						; SC056: QW <> (ISO _102)
QW_Z  = System  						; SC02c: QW Z
QW_X  = System  						; SC02d: QW X
QW_C  = System  						; SC02e: QW C
QW_V  = System  						; SC02f: QW V
QW_B  = System  						; SC030: QW B
QW_N  = System  						; SC031: QW N
QW_M  = System  						; SC032: QW M
QW_CM = System  						; SC033: US ,< (ANSI/ISO _COMMA)
QW_PD = System  						; SC034: US .> (ANSI/ISO _PERIOD)
QW_SL = System  						; SC035: US /? (ANSI _2, ISO _MINUS)
QWSPC = System  						; SC039: Space
QWPDC = System  						; SC053: NumPad Decimal (ANSI/ISO DECIMAL)
