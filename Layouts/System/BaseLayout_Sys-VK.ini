;
;;  Layout definitions
;;  for Portable Keyboard Layout by Farkas Máté [https://github.com/Portable-Keyboard-Layout]
;;  edition DreymaR (Øystein B Gadmar, 2015-)   [https://github.com/DreymaR/BigBagKbdTrixPKL]
;
;;  To use this layout, edit the EPKL_Layouts .ini 'layout = ' and/or Type/Mod/ID/etc entries.
;;  A simpler way is the Layout/Settings dialog from the EPKL tray menu (or try Ctrl+Shift+6).
;;  Alternatively, run EPKL in compactMode with the layout's files in the main program folder.
;
;;  This is an EPKL base layout file
;;    - It contains a useable layout in the EPKL format, and is pointed to by layout.ini files
;;    - The layout.ini file holds changes from the base layout, remaps and other layout info
;

[information]
layoutName      = VirtualKey system passthrough layout
layoutCode      = Sys-VK
localeID        = 00000409

copyright       = DreymaR (GPL v3)
company         = DreymaR
homepage        = http://forum.colemak.com/viewtopic.php?id=1467
version         = 4.0

[pkl]
;;  A layout may augment its base one. The Remap file contains ergo and other layout remaps.
;;  The Extend/dkList/string files hold Extend, dead key and literal/PowerString definitions.
;baseLayout      = ..\BaseLayout_Cmk-VK
;remapsFile      = Files\_eD_Remap.ini
;extendFile      = Files\_eD_Extend.ini
;dkListFile      = Files\_eD_DeadKeys.ini
;stringFile      = Files\_eD_PwrStrings.ini
;cmposrFile      = Files\_eD_Compose.ini

;;  The "layout/soft" ScanCode map is for typing, the "extend/hard" one for Extend mappings.
;;  The "mechanical layout" VirtualKey map is mainly for ANS(I)/ISO/JIS conversion.
;mapSC_layout    = Angle_@K 					; Angle_@K, AWide_@K, Cmk-CAW-_@K etc - see _eD_Remap.ini
;mapSC_extend    = Angle_@K 					; Only "hard" (non-letter) mods.
;mapVK_mecSym    = ANS2ISO-Sc 					; Convert KbdType. Beware of different ISO VK codes!

;;  DreymaR's Cmk-IBM help images (5*14 keys @96dpi)
img_sizeWH      = 812,282 						; (541,188 @64dpi)
;;  DreymaR's compact help images (3*10 keys @48dpi)
;img_sizeWH      = 292,85 						; ISO-Angle 298. Ortho 276. Others 292.
;;  Scaling factor for help images, in %. (96->64)dpi = 66.66%; (96->48)dpi = 50%
img_scale       = 100

;;  Background image (key caps etc) and a background color for the image panel
img_bgImage     = Files\ImgBackground\Bg_Nice-Tinted_@K.png
;img_bgImage     = Files\ImgBackground\Bg_FingerShui-eD_@K.png
;img_bgColor     = 999999
;;  On/Off, Extend, Dead key and Shift state marker (e.g., MagBlob, GrnBlob) images
;icons_OnOff     = Files\ImgIcons\PKL_
img_Extend1     = Files\ImgExtend\@K_Ext1.png
img_Extend2     = Files\ImgExtend\@K_Ext2.png
img_Extend3     = Files\ImgExtend\@K_Ext3.png
img_Extend4     = Files\ImgExtend\_Empty_Ext.png
;img_DKeyDir     = .\DeadkeyImg
img_ModsDir     = Files\ImgModStates\GrnBlob

[layout]
;;  - These mappings override any key mappings in the _Layouts_ files.
;;  - They may in turn be overridden by mappings in the current layout.ini file.
;
;SCAN = VKEY    	VirtualKey
QW_GR = VirtualKey	; SC029: US `~ (ANSI _3, ISO _5)
QW_1  = VirtualKey	; SC002: US 1
QW_2  = VirtualKey	; SC003: US 2
QW_3  = VirtualKey	; SC004: US 3
QW_4  = VirtualKey	; SC005: US 4
QW_5  = VirtualKey	; SC006: US 5
QW_6  = VirtualKey	; SC007: US 6
QW_7  = VirtualKey	; SC008: US 7
QW_8  = VirtualKey	; SC009: US 8
QW_9  = VirtualKey	; SC00a: US 9
QW_0  = VirtualKey	; SC00b: US 0
QW_MN = VirtualKey	; SC00c: US -_ (ANSI _MINUS, ISO _PLUS)
QW_PL = VirtualKey	; SC00d: US =+ (ANSI _PLUS, ISO _4)

QW_Q  = VirtualKey	; SC010: QW Q
QW_W  = VirtualKey	; SC011: QW W
QW_E  = VirtualKey	; SC012: QW E
QW_R  = VirtualKey	; SC013: QW R
QW_T  = VirtualKey	; SC014: QW T
QW_Y  = VirtualKey	; SC015: QW Y
QW_U  = VirtualKey	; SC016: QW U
QW_I  = VirtualKey	; SC017: QW I
QW_O  = VirtualKey	; SC018: QW O
QW_P  = VirtualKey	; SC019: QW P
QW_LB = VirtualKey	; SC01a: US [{ (ANSI _4, ISO _6)
QW_RB = VirtualKey	; SC01b: US ]} (ANSI _6, ISO _1)

QW_A  = VirtualKey	; SC01e: QW A
QW_S  = VirtualKey	; SC01f: QW S
QW_D  = VirtualKey	; SC020: QW D
QW_F  = VirtualKey	; SC021: QW F
QW_G  = VirtualKey	; SC022: QW G
QW_H  = VirtualKey	; SC023: QW H
QW_J  = VirtualKey	; SC024: QW J
QW_K  = VirtualKey	; SC025: QW K
QW_L  = VirtualKey	; SC026: QW L
QW_SC = VirtualKey	; SC027: QW ;: (ANSI _1, ISO _3)
QW_QU = VirtualKey	; SC028: US '" (ANSI/ISO _7)
QW_BS = VirtualKey	; SC02b: US \| (ANSI _5, ISO _2)

QW_LG = VirtualKey	; SC056: QW <> (ISO _102)
QW_Z  = VirtualKey	; SC02c: QW Z
QW_X  = VirtualKey	; SC02d: QW X
QW_C  = VirtualKey	; SC02e: QW C
QW_V  = VirtualKey	; SC02f: QW V
QW_B  = VirtualKey	; SC030: QW B
QW_N  = VirtualKey	; SC031: QW N
QW_M  = VirtualKey	; SC032: QW M
QW_CM = VirtualKey	; SC033: US ,< (ANSI/ISO _COMMA)
QW_PD = VirtualKey	; SC034: US .> (ANSI/ISO _PERIOD)
QW_SL = VirtualKey   	VirtualKey	; SC035: US /? (ANSI _2, ISO _MINUS)
QWSPC = VirtualKey	; SC039: Space
QWPDC = VirtualKey	; SC053: NumPad Decimal (ANSI/ISO DECIMAL)
