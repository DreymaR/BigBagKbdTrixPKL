;
;;  Layout definitions
;;  for Portable Keyboard Layout by Máté Farkas [https://github.com/Portable-Keyboard-Layout]
;;  edition DreymaR (Øystein Bech-Aase, 2015-)  [https://github.com/DreymaR/BigBagKbdTrixPKL]
;
;;  To use this layout, edit the EPKL_Layouts .ini 'layout = ' and/or Type/Mod/ID/etc entries.
;;  A simpler way is the Layout/Settings dialog from the EPKL tray menu (or try Ctrl+Shift+6).
;;  Alternatively, run EPKL in compactMode with the layout's files in the main program folder.
;
;;  This is an EPKL style layout.ini file
;;    - It may point to a base layout, Extend and DeadKey table files containing layout parts
;;    - The layout.ini file holds changes from the base layout, remaps and other layout info
;

[information]
layoutName      = Colemak-eD CurlAngleWideSym-ISO ergo.
layoutCode      = Cmk-eD-CAWS-ISO
localeID        = 00000409

copyright       = DreymaR (GPL v3)
company         = Shai Coleman, DreymaR
homepage        = https://dreymar.colemak.org/layers-colemaked.html
version         = 4.0

[pkl]
KbdType         = ISO 							; @K below: ANS (ANSI 101/104 key), ISO (Intl. 102/105 key)
;;  A layout may augment its base one. The Remap file contains ergo and other layout remaps.
;;  The Extend/dkList/string files hold Extend, dead key and literal/PowerString definitions.
;baseLayout      = Colemak\BaseLayout_Cmk-eD
baseLayout      = Colemak\BaseLayout_Cmk-eD_VK-None

;;  The "layout/soft" ScanCode map is for typing, the "extend/hard" one for Extend mappings.
mapSC_layout    = Cmk-CAWS_@K					; Angle_@K, AWide_@K, Cmk-CAW-_@K etc - see _eD_Remap.ini
mapSC_extend    = Ext-CAWS_@K					; Only "hard" (non-letter) mods. Extend Curl-DH moves Ext+V with V. Swap SL-BS for Wide-ISO WheelLe/Ri.

;;  Help images are in the main layout folder, unless specified in img_MainDir.
;img_MainDir     = .\
;;  Background image (key caps etc) and a background color for the image panel
;img_bgImage     = Files\ImgBackground\Bg_Nice-Tinted_@K.png
img_bgImage     = Files\ImgBackground\Bg_FingerShui-eD_@K-AWide.png
;img_bgColor     = 999999
;;  On/Off, Extend, Dead key and Shift state marker (e.g., MagBlob, GrnBlob) images
;;  Variants pointing to another layout's images may have some discrepancies.
icons_OnOff     = Files\ImgIcons\Co-6_
img_Extend1     = Files\ImgExtend\@K-CAWS_Ext1.png  	; CAWide if Curl(DH) Ctrl+V follows V, AWide if not; ISO-CAWS swaps SL-BS
img_Extend2     = Files\ImgExtend\@K-CAWS_Ext2.png  	; --"--
img_Extend3     = Files\ImgExtend\@K-CAWS_Ext3.png  	; "Soft" mnemonic layers follow letters
img_DKeyDir     = .\DeadkeyImg
;img_ModsDir     = Files\ImgModStates\GrnBlob-HomeNubsWide-FShui

[fingers]
;;  This section is not used by EPKL, but a PKL Perl script used it to determine fingering colors.
;row1 = 1123344 556778	; Num   ` 1 2 3 4 5 6 \ 7 8 9 0 =
;row2 = 1123444 556788	; Top   →  Q W F P B [ J L U Y ' -
;row3 = 112344 5556788	; Hom   ↑  A R S T G ] M N E I O ;
;row4 = 123444 55567 9	; Low     Z X C D V _ / K H , .

[layout]
;;  Override keys from the base layout with mappings here. A "VK" entry resets that key.
;;
shiftStates    =			0	:	1	:	2	:	6	:	7		;	8	:	9	:	e	:	f
;; SC = VKEY    	CStat	Base	Shift	Ctrl	AltGr	AGrSh	;	SGCap	SGCSh

QW_P  = vc_SC   	0   	;   	:   	--  	@0a8	…   	; SC019: QW pP - dk_Umlaut 	; eD WIP: Cmk vc_SC doesn't play well with EPKL VK/SC layouts.

;QW_X  = VKey    													; Co xX 	; eD WIP TESTED – VK mapping a key to itself.
;QW_X  = W     VKey  												; Co xX 	; eD WIP TESTED – VK mapping a key to a key by name.
;QW_C  = SKey    													; Co cC 	; eD WIP TESTED – a System mapping SC maps the key onto itself (on the OS layout)
;QW_C  = SC011 SC    												; Co cC 	; eD WIP TESTED – a SKey mapping SC maps the key as another (wW) by SC###
;QW_C  = qwBSP SKey  												; Co cC 	; eD WIP TESTED – a SKey mapping SC maps the key as another (wW) by QW### KLM code

;QW_R  = P       	0   	##   	##   	--  	π   	¶   	; Co pP 	; eD WIP TESTED - States 0/1 send VK codes to make Win+# combos work better
;QW_Q  = Q       	1   	qu   	Qu   	--  	‚   	„   	; QW qQ 	; eD WIP TESTED - Mapping the Qu/qu bigram on the Q key
;QWLAL = LMENU VKey  															; eD WIP TEST: How can we remap a key to LAlt? Why does Extend get disabled?

;QW_D  = S/LS   	1   	s   	S   	--  	ß   	§   	; QW dD as ToM S/LShift 	; eD WIP TEST
;QW_F  = T/LC   	5   	t   	T   	--  	þ   	Þ   	; QW fF as ToM T/LCtrl  	; eD WIP TEST
;QW_J  = N/RC   	1   	n   	N   	--  	–   	↑   	; QW jJ
;QW_K  = E/RS   	1   	e   	E   	--  	€   	←   	; QW kK    	; eD WIP: This is not good as ToM keys lose autorepeat so they don't work well as Extend arrows!

[testing]
;;  The below is only for testing dead key image generation with a reduced DK set. Disable (move out of the [layout] section) after use!
QW_GR = vc_GR   	0   	`   	~
QW_1  = 1       	0   	##  	!
QW_2  = 2       	0   	##  	@
QW_3  = 3       	0   	##  	#
QW_4  = 4       	0   	##  	$
QW_5  = 5       	0   	##  	%
QW_6  = 6       	0   	##  	^
QW_7  = 7       	0   	##  	&
QW_8  = 8       	0   	##  	*
QW_9  = 9       	0   	##  	(
QW_0  = 0       	0   	##  	)
QW_MN = vc_MN   	0   	-   	_
QW_PL = vc_PL   	0   	=   	+

QW_P  = vc_SC   	0   	;   	:
QW_QU = vc_QU   	0   	'   	"
QW_BS = vc_BS   	0   	\   	|

QW_CM = vc_CM   	0   	,   	<
QW_PD = vc_PD   	0   	.   	>
QW_SL = vc_SL   	0   	/   	?
