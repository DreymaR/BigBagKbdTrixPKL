;
;;  ================================================================================================================================================
;;  Layout Definition file
;;  for EPiKaL Portable Keyboard Layout (EPKL) by Øystein "DreymaR" Bech-Aase (2015-), based on PKL by Máté Farkas (2008-2010).
;
;;  - The Layout.ini file may point to a BaseLayout as well as Extend/DeadKey/Compose/etc table files.
;;  - It can override BaseLayout, EPKL_Layouts_Override and EPKL_Layouts mappings, add key (re)maps and other layout info.
;;  - It, in turn, can be overridden by a Layout_Override user file located in the same layout folder as itself.
;;  - To select a layout, you can use the Layout/Settings dialog from the EPKL tray menu (or Ctrl+Shift+6).
;;  - A more low-level way is to edit the EPKL_Layouts(_Override) 'layout = ' line and/or Type/Mod/ID/etc entries directly.
;;  - Alternatively, run EPKL in compactMode with the layout's files directly inside the main program folder.
;;  ================================================================================================================================================
;
;;  Base Layout file info:
;;  - This file defines a useable layout in the EPKL format.
;;  - It is pointed to and overridden by Layout.ini files for key remaps, mapping overrides etc.
;;  - Any BaseLayout file may in turn point to and override another, in a BaseStack.
;

[information]
layoutName      = Gallium-eD ANSI (GalileoBlues)
layoutCode      = Gallium-eD-ANS
localeID        = 00000409

copyright       = GalileoBlues (Bryson James)
company         = DreymaR
homepage        = https://github.com/GalileoBlues/Gallium
version         = 2022-12

[pkl]
;;  A layout may augment its base one. The Remap file contains ergo and other layout remaps.
;;  The Extend/dkList/string files hold Extend, dead key and literal/PowerString definitions.
;baseLayout      = Colemak\BaseLayout_Cmk-eD
;remapsFile      = Files\_eD_Remap.ini
;extendFile      = Files\_eD_Extend.ini
;dkListFile      = Files\_eD_DeadKeys.ini
;stringFile      = Files\_eD_PwrStrings.ini
;cmposrFile      = Files\_eD_Compose.ini

;;  The "layout/soft" ScanCode map is for typing, the "extend/hard" one for Extend mappings.
;;  The "mechanical layout" VirtualKey map is mainly for ANS(I)/ISO/JIS conversion.
;mapSC_layout    = AWide_@K  					; Angle_@K, AWide_@K, Cmk-CAW-_@K etc - see _eD_Remap.ini
;mapSC_extend    = AWide_@K  					; Only "hard" (non-letter) mods. Extend Curl-DH moves Ext+V with V.

;;  DreymaR's Cmk-IBM help images (5*14 keys @96dpi)
img_sizeWH      = 812,282 						; (541,188 @64dpi)
;;  DreymaR's compact help images (3*10 keys @48dpi)
;img_sizeWH      = 292,85 						; ISO-Angle 298. Ortho 276. Others 292.
;;  Scaling factor for help images, in %. (96->64)dpi = 66.66%; (96->48)dpi = 50%
img_scale       = 100

;;  Background image (key caps etc) and a background color for the image panel
img_bgImage     = Files\ImgBackground\Bg_Nice-Tinted_@K.png
;img_bgImage     = Files\ImgBackground\Bg_Simple-TopsOnly_@K.png
;img_bgImage     = Files\ImgBackground\Bg_FingerShui-eD_@K.png
;img_bgColor     = 999999
;;  On/Off, Extend, Dead key and Shift state marker (e.g., MagBlob, GrnBlob) images
icons_OnOff     = ..\_Res\Gallium_
img_Extend1     = Files\ImgExtend\@K_Ext1.png
img_Extend2     = Files\ImgExtend\@K_Ext2.png
img_Extend3     = Files\ImgExtend\@K_Ext3.png
img_Extend4     = Files\ImgExtend\_Empty_Ext.png
;img_DKeyDir     = .\Cmk-eD\Cmk-eD_@K\DeadkeyImg
img_ModsDir     = Files\ImgModStates\GrnBlob

[Remaps]
Gal-Orth        = ^GalRow2Col   									; Convert the Gallium Rowstag version in this BaseLayout to the Colstag version.
GalQX           = ^Swap_Z_X     									; Swap Gallium X and Q back for a better Angle mod, similarity to others etc.
GalQXZ          = ^Swap_ZXB     									; Swap Gallium X and Q back, and bring Z to its familiar corner spot.
GalrdAWS_ISO    = ^UnSym_Gal,AWS_ISO    							; Gallium "Galliard" AngleSymWide mod for ISO  boards; like, e.g., Colemak-CAWS.
GalrdAWS_ANS    = ^UnSym_Gal,AWS_ANS    							; Gallium "Galliard" AngleSymWide mod for ANSI boards; --"--
Gal-Gra-L       = ^Swap_Z_X,^Gal-Gra_Left   						; An insight: Swapping C-W/V-Z(/Q-X) swaps Gallium - Graphite left  hand, all keys.
Gal-Gra-R       = ^Swap_Y_P     									;             Swapping J-'         swaps Gallium - Graphite right hand main keys.
Gralmak-L       = ^Swap_ZXB,^Gal-Gra_Left   						; Gralmak uses Z-X in the lower left corner.

[RemapCycles]
;;  Side note: Cycles from Cmk-DH/CAWS to Galliard are: n>a>e>i>o>u>y>m>c>p>h - s>t - d>f>l>w - q>z>v>b. Common: j g x k.
GalRow2Col      = QW>  | _U  | _M  | _H  |  						; Convert Rowstag version (F Y P top-to-bottom) to Colstag version (Y P F).
Swap_Z_X        = QW>  | _Z  | _X  |        						; Swap X and Q (QWERTY Z and X) as in the original version, and Graphite.
UnSym_Gal       = QW>  | _SL | _PD | _P  | _CM | _QU |  			; Symbol reset for Gallium (w/ SC in its Cmk pos.), allowing standard Sym mods.
Gal-Gra_Left    = QW>  | _R  | _V  / _T  | _B  |    				; Interesting: C-W/V-Z(/Q-X) are the only Gallium-Graphite left hand swaps needed.
Swap_Y_P        = QW>  | _Y  | _P  |        						; J-' is the only Gallium-Graphite right hand swap, ignoring other symbol keys.
Swap_Z_X        = QW>  | _Z  | _X  |        						; Q-X is a simple swap that increases QWERTY/Colemak familiarity at next-to-no cost.
Swap_ZXB        = QW>  | _Z  | _X  | _B  |  						; QXZ is a simple swap that increases QWERTY/Colemak familiarity at next-to-no cost.

[fingers]
;;  This section is not used by EPKL, but a PKL Perl script used it to determine fingering colors.
;row1 = 112334 5567888	; Num   ` 1 2 3 4 5   6 7 8 9 0  - = 
;row2 = 112344 5567888	; Top   → b l d c v   j f o u ,  [ ]    	- I chose to use the "rowstag" version ("vRow") in this BaseLayout.
;row3 = 112344 5567888	; Hom   ↑ n r t s g   y h a e i  / \    	- The "Row2Col" remap converts this to the colstag ("vCol") version.
;row4 = 112344 55678 9	; Low   _ x q m w z   k p ' ; .         	- The letters F Y P in vRow, are Y P F in vCol. That's it.

[layout]
;;  - These mappings override any key mappings in the _Layouts_ files.
;;  - They may in turn be overridden by mappings in the current Layout.ini file.
;
shiftStates    =			0	:	1	:	2	:	6	:	7		;	8	:	9	:	e	:	f
;; SC = VKEY    	CStat	Base	Shift	Ctrl	AltGr	AGrSh	;	SwiSh	SwShS	SwAGr	SwAGS

;;  	| 1 2 3 4 5   6 7 8 9 0  - = |  	; Gallium Number Row (normal Number Row)
QW_GR = vc_GR   	0   	`   	~   	--  	@07e	≈   	; US `~ - dk_Tilde (ANS/ISO OEM_3/OEM_5)
QW_1  = 1       	0   	1   	!   	--  	@323	¡   	; US 1! - dk_DotBelow
QW_2  = 2       	0   	2   	@   	--  	@309	²   	; US 2@ - dk_HookAbove/PalatalHook
QW_3  = 3       	0   	3   	#   	--  	@31b	³   	; US 3# - dk_Horn/Tail/RetroflexHook
QW_4  = 4       	0   	4   	$   	--  	@0a4	£   	; US 4$ - dk_Currency
QW_5  = 5       	0   	5   	%   	--  	@0b5	‰   	; US 5% - dk_Greek(Mu)
QW_6  = 6       	0   	6   	^   	--  	@05e	∂   	; US 6^ - dk_Circumflex
QW_7  = 7       	0   	7   	&   	--  	@2c7	¬   	; US 7& - dk_Caron
QW_8  = 8       	0   	8   	*   	--  	@2db	∞   	; US 8* - dk_Ogonek/CommaBelow
QW_9  = 9       	0   	9   	(   	--  	@2d8	·   	; US 9( - dk_Breve
QW_0  = 0       	0   	0   	)   	--  	@0b0	°   	; US 0) - dk_RingAbove/Lig
QW_MN = vc_MN   	0   	-   	_   	--  	@0af	±   	; US -_ - dk_Macron (ANS/ISO _MINUS/_PLUS)
QW_PL = vc_PL   	0   	=   	+   	--  	@2dd	≠   	; US =+ - dk_DblAcute/Sci (ANS/ISO _PLUS/_4)

;;  	| b l d c v   j f o u ,  [ ] |  	; Gallium Upper Row
QW_Q  = B       	1   	b   	B   	--  	•   	β   	; Gal bB
QW_W  = L       	5   	l   	L   	--  	ł   	Ł   	; Gal lL
QW_E  = D       	5   	d   	D   	--  	ð   	Ð   	; Gal dD
QW_R  = C       	1   	c   	C   	--  	©   	¢   	; Gal cC
QW_T  = V       	1   	v   	V   	--  	÷   	γ   	; Gal vV
QW_Y  = J       	5   	j   	J   	--  	ʃ   	Ʃ   	; Gal jJ
QW_U  = F       	1   	f   	F   	--  	º   	ª   	; Gal fF vRow / yY vCol (Cmk-eD ’”)
QW_I  = O       	1   	o   	O   	--  	‹   	«   	; Gal oO (Cmk-eD ºª)
QW_O  = U       	1   	u   	U   	--  	›   	»   	; Gal uU (Cmk-eD ‹«)
QW_P  = vc_CM   	0   	,   	<   	--  	@0b8	≤   	; Gal ,< - dk_Cedilla (ANS/ISO OEM_COMMA)
QW_LB = vc_LB   	4   	[   	{   	&Esc	å   	Å   	; US [{
QW_RB = vc_RB   	4   	]   	}   	--  	æ   	Æ   	; US ]}

;;  	| n r t s g   y h a e i  / \ |  	; Gallium Home Row
QW_A  = N       	1   	n   	N   	--  	–   	↑   	; Gal nN
QW_S  = R       	1   	r   	R   	--  	®   	™   	; Gal rR
QW_D  = T       	5   	t   	T   	--  	þ   	Þ   	; Gal tT
QW_F  = S       	1   	s   	S   	--  	ß   	§   	; Gal sS
QW_G  = G       	5   	g   	G   	--  	ŋ   	Ŋ   	; Gal gG
QW_H  = Y       	1   	y   	Y   	--  	’   	”   	; Gal yY vRow / pP vCol (Cmk-eD › »)
QW_J  = H       	5   	h   	H   	--  	ħ   	Ħ   	; Gal hH
QW_K  = A       	1   	a   	A   	--  	đ   	α   	; Gal aA
QW_L  = E       	1   	e   	E   	--  	€   	←   	; Gal eE
QW_SC = I       	1   	i   	I   	--  	—   	→   	; Gal iI
QW_QU = vc_SL   	0   	/   	?   	--  	@02f	¿   	; Gal /? - dk_Stroke/Bar (ANS/ISO _2/_MINUS)
QW_BS = vc_BS   	0   	\   	|   	--  	@060	¦   	; US \| - dk_Grave/Subscript (ANS/ISO _5/_2)

;;  	| x q m w z   k p ' ; .      |  	; Gallium Lower Row
;QW_LG = vc_LG   	5   	œ   	Œ   	--  	ø   	Ø   	; US <> -eD ## (ISO OEM_102)
QW_Z  = X       	1   	x   	X   	--  	†   	‡   	; Gal xX
QW_X  = Q       	1   	q   	Q   	--  	‚   	„   	; Gal qQ (Cmk-eD ‚„)
QW_C  = M       	1   	m   	M   	--  	×   	↓   	; Gal mM
QW_V  = W       	1   	w   	W   	--  	‘   	“   	; Gal wW (Cmk-eD ‘“)
QW_B  = Z       	5   	z   	Z   	--  	ʒ   	Ʒ   	; Gal zZ
QW_N  = K       	5   	k   	K   	--  	ç   	Ç   	; Gal kK
QW_M  = P       	1   	p   	P   	--  	π   	¶   	; Gal pP vRow / fF vCol
QW_CM = vc_QU   	0   	'   	"   	--  	@0b4	′   	; Gal '" - dk_Acute/Superscript (ANS/ISO _7)
QW_PD = vc_SC   	0   	;   	:   	--  	@0a8	…   	; Gal ;: - dk_Umlaut (ANS/ISO _1/_3)
QW_SL = vc_PD   	0   	.   	>   	--  	@2d9	≥   	; Gal .> - dk_DotAbove (ANS/ISO OEM_PERIOD)
QWSPC = SPACE   	0   	Spc 	Spc 	--  	Spc 	    	; Space (NBSP may cause trouble?)

[deadKeyNames]
;;  Names listed in this section will override those in the deadkey tables file.
;@323 = DotBelow      	; . - Dot below
;@309 = Hook-Palatal  	; ̉  - Hook, palatal hook, rhotic hook
;@31b = Horn-Tail     	; ̛ - Horn, tail
;@0a4 = Currency      	; ¤ - Currency symbols
;@0b5 = Greek         	; µ - Greek letters
;@05e = Circumflex    	; ^ - Circumflex
;@2c7 = Caron         	; ˇ - Caron
;@2db = Ogonek-CmBel  	; ˛ - Ogonek, comma below
;@2d8 = Breve         	; ˘ - Breve, Gr. Vrachy
;@0b0 = RingAbov-Lig  	; ° - Ring above, ligatures, ring symbols
;@0af = Macron        	; ¯ - Macron, horz. line symbols
;@2dd = DblAcute-Sci  	; ˝ - Double acute, science/math symbols
;@0a8 = Umlaut        	; ¨ - Umlaut, diaeresis, Gr. Dialytika
;@07e = Tilde         	; ~ - Tilde, Gr. Perispomeni
;@0b4 = Acute-Sup     	; ´ - Acute, Gr. Tonos-Oxia, superscripts
;@060 = Grave-Sub     	; ` - Grave, Gr. Varia, subscripts
;@0b8 = Cedilla       	; ¸ - Cedilla
;@2d9 = DotAbove      	; ˙ - Dot above, dot symbols
;@02f = Stroke-Bar    	; / - Stroke, bar, fractions


[dk_CoDeKey_0]
;;  These are mappings used by the EPKL CoDeKey through the @co0 dead key.
;;  With the CoDeKey, you can press Compose then a key to release its mapping unless you typed a recognized Compose sequence first.
;;  What you'll want here is probably individual. I use it to alleviate some stretches, but most for punctuation-plus-space.
;;  Some traditional X11 compose sequences contain normal text (e.g., ce/be for ě/ĕ) that'll conflict with this DK.
;;    - Even accounting for those, there are still useful sequences like `ng ss oe ae ff fi fl ij oo` (ŋ ß œ æ ﬀ ﬁ ﬂ ĳ °).
;;    - The solution for this has generally been to prefix the conflicting sequences with an apostrophe (`'ng` for `ŋ` etc).
;;  NOTE: See the EPKL_Layouts files for more mappings for this special dead key. Locale mappings etc. belong there instead of here.
;;  NOTE: You could use this table directly without Compose too, like the `@co1` DK. Just map directly to the `@co0` DK to do that.
;;  
;;  NOTE: This is a Gallium (Galliard) override table for the mappings in `_eD_DeadKeys.ini`.
;;    - I've used DKs which are glyph-centric in nature, for mostly position-based mappings in my setup created for Colemak.
;;    - This creates a discrepancy vis-a-vis non-Colemak layouts.
;;    - For now, I've simply recreated all positions for Galliard below.
;

<b>     = «Esc» α{Esc}  								; q ⇒ Esc, as on Ext1. Also, cancels the DK if activated by error.
<B>+    = «Esc» α{Esc}

;;  These mappings save stretches up to the number row, like a symbol layer.
;;  WIP: I'm not using the "stretch-savers" much, mainly punctuation and word-delete. Is it only a matter of training?
<n>     = !             								; a ⇒ ! (Less travel and strain than Shift+NumberRow)
<N>+    = !             								;       --"--
;<r>     = @             								; r ⇒ @ --"--
;<R>+    = @             								;       --"--
<t>     = #             								; s ⇒ # --"-- (Tip: Deletes the current email in Gmail, for a good workflow)
<T>+    = #             								;       --"--
<s>     = $             								; t ⇒ $ --"--
<S>+    = $             								;       --"--
;<g>     = %             								; g ⇒ % --"-- (Cmk D, Cmk-DH G; I could've used QWE/Cmk Q, but it was taken)
;<G>+    = %             								;       --"--
<c>     = `             								; p ⇒ ` --"--
<C>+    = ~             								;       --"--
<v>     = ^             								; b ⇒ ^ --"-- (Cmk G, Cmk-DH B)
<V>+    = ^             								;       --"--
;<j>     = ~             								; J is a hard reach; something useful but rare here? A 4th locale/custom letter?
;<J>+    = ~             								;       --"--
<f>     = &             								; l ⇒ & --"--
<F>+    = &             								;       --"--
<y>     = \             								; m ⇒ \ --"-- (Cmk H, Cmk-DH M)
<Y>+    = |             								;       --"--
<p>     = ?             								; k ⇒ ? --"-- (More intuitive on the / key, but that's used for locale letters)
<P>+    = ?             								;       --"--

;;  These DK mappings are a very interesting and novel way of typing punctuation! I love it!
;;      - For now, they work much better on the @co0 CoDeKey tap than on Ext-tap due to timing issues with the latter.
;;      - They avoid curling to the lower row, instead using home row keys in addition to the DK.
;;      - They add space and, when relevant, capitalization in compensation for the extra key press. Or other benefits.
<l>     = «␣"»  α{Space}"   							; w ⇒ _"        (opening quotes)
<d>     = «"␣»  α"{Space}   							; f ⇒ "_        (closing quotes)
<L>+    = «' '»  α''{Left}   						; W ⇒ ' Quotes  , move cursor inside
<D>+    = «" "»  α""{Left}   						; F ⇒ " Quotes  , move cursor inside
<ł>     = «‘ ’»  α‘’{Left}   						; ‘ ⇒ ‘ Quotes  , --"--
<ð>     = «“ ”»  α“”{Left}   						; ’ ⇒ “ Quotes  , --"--
<o>     = «␣(»  α{Space}(   							; u ⇒ _(        (opening parenthesis)
<u>     = «)␣»  α){Space}   							; y ⇒ )_        (closing parenthesis)
<O>+    = «( )»  α(){Left}   						; U ⇒ Parentheses, move cursor inside
<U>+    = «[ ]»  α[]{Left}   						; Y ⇒ Brackets   , --"--

<h>     = «!␣»  α{!}{Space}{Shift OSM}  				; n ⇒ ! Spc, Shift next key
<H>+    = «!↵»  α{!}{Enter}{Shift OSM}  				; N ⇒ ! Enter
<a>     = «,␣»  α{,}{Space} 							; e ⇒ , Spc
<A>+    = «,↵»  α{,}{Enter} 							; N ⇒ , Enter
<e>     = «.␣»  α{.}{Space}{Shift OSM}  				; i ⇒ . Spc, Shift next key
<E>+    = «.↵»  α{.}{Enter}{Shift OSM}  				; E ⇒ . Enter
<i>     = «?␣»  α{?}{Space}{Shift OSM}  				; o ⇒ ? Spc, Shift next key
<I>+    = «?↵»  α{?}{Enter}{Shift OSM}  				; O ⇒ ? Enter

<q>     = «⌃z»  β{Esc}^z    							; z ⇒ Undo, same as on Ext1
<Q>+    = «⌃Z»  α^+z        							; Z ⇒ Redo
;<x>     = «⌃x»  α^x         							; x ⇒ Cut
;<X>+    = «⌃X»  α{Home 2}+{Down}^x  					; X ⇒ Cut the current line
<m>     = «⌃c»  α^c         							; c ⇒ Copy
<M>+    = «⌃C»  α{Home 2}+{Down}^c{Up}  				; C ⇒ Copy the current line
<w>     = «⌃v»  α^v         							; v ⇒ Paste
<W>+    = «#v»  α#v         							; V ⇒ Win Paste Clipboard (Win+v)
<z>     = « ⌫ʷ» ¶WBS        							; d ⇒ Back*2(?) then Ctrl+Back.
<Z>+    = « ⌦ʷ» ¶WDL        							; D ⇒ Ctrl+Delete - delete next word
<k>     = « ⌫ʷ» ¶WBS        							; h ⇒ Back*2(?) then Ctrl+Back.
<K>+    = « ⌦ʷ» ¶WDL        							; H ⇒ Ctrl+Delete - delete next word

[dk_Ext_Special]
;;  Some useful symbols and commands are found in this DK table. By default it's used with unmodified Extend-tap if you have a MoDK Extend key set.
;;  
;;  NOTE: Again: This is a Gallium (Galliard) override table for the mappings in `_eD_DeadKeys.ini`. See the CoDeKey_0 comments.
;;    - Therefore, these are not all the mappings from the DeadKeys file.
;

<b>     = «Esc» α{Esc}      							; q ⇒ Esc, as on Ext1. Also, cancels the DK if activated by error.
<B>+    = «Esc» α{Esc}      							; Q ⇒ Esc – --"--
<l>     = «⬆️»   α{WheelUp   2}  						; w ⇒ WheelUp - like the Extend mapping (which has 2)
<L>+    = «URL» α^l         							; W ⇒ Ctrl+l - Navigate (go to URL bar, open a dropdown box).
;<f>     = «⌃f»  α^f         							; f ⇒ Ctrl+f – Find
;<F>+    = «⌃F»  α^+f        							; F ⇒ Ctrl+Shift+f - Find in files (Notepad++ etc)
<c>     = «⌃w»  α^w         							; p ⇒ Ctrl+w - Close
<C>+    = «⌃W»  α^+w        							; P ⇒ Ctrl+W - Close
;<g>     = «Ʃ»   α¢[Run("Calc")]¢    					; g ⇒ Run Calculator
;<G>+    = «🗒»   α¢[Run("Notepad")]¢ 					; G ⇒ Run Notepad
;<j>     = «PgU» α{PgUp}     							; j ⇒ PageUp
;<J>+    = «Hom» α^{Home}    							; J ⇒ Ctrl+Home - Start of document
<z>     = «#x»  α#x         							; l ⇒ Win+x – Open Windows Quick Link menu
<Z>+    = «#x»  α#x         							; l ⇒ --"--
;<u>     = «w³?» α^l¢[Sleep(200)]¢{Text}?    			; u ⇒ Ctrl+l then ? - Navigate (go to URL bar) then initiate a search.
;<U>+    = «URL» α^l         							; U ⇒ Ctrl+l - Navigate (go to URL bar, open a dropdown box).
<o>     = «( )»  α(){Left}      					; y ⇒ Parentheses, move cursor inside
<O>+    = «[ ]»  α[]{Left}      					; Y ⇒ Brackets   , --"--
<‹>     = «{ }»  α{{}{}}{Left}  					; › ⇒ Braces     , --"--; AltGr mappings are Colemak-eD specific

;<a>     = «⌃a»  α^a         							; a ⇒ Ctrl+a - Select all
;<A>+    = «+↓»  α{Down}{Home 2}+{Up}    				; A ⇒ Select the current line (Down/Up ⇒ End to exclude the final line break)
;<r>     = «⬇️»   α{WheelDown 2}  						; r ⇒ WheelDn - like the Extend mapping (which has 2)
;<R>+    = «#r»  α#r         							; R ⇒ Win+r - Run
;<s>     = «⌃s»  α^s         							; s ⇒ Ctrl+s - Save
;<S>+    = «#S»  α#+s        							; S ⇒ Win+Shift+s - Windows Snipping/Screenshot Tool
;<t>     = « ⎇⭾ »  α!{Tab}   							; t ⇒ Alt-Tab tap – great for getting back to your previous window
;<T>+    = « ⎇⭾ »  α!{Tab}   							; T ⇒ --"--
;<d>     = «#d»  α#d         							; d ⇒ Win+d - show/hide desktop
;<D>+    = «#D»  α#+d        							; D ⇒ Win+D - --"--
<p>     = «🗔↓» α!{Space}¢[Sleep(100)]¢n 				; h ⇒ Alt+{Spc},n - Minimize window.
<P>+    = «🗔↑» α!{Space}¢[Sleep(100)]¢x 				; H ⇒ Alt+{Spc},x - Maximize window.
<h>     = «!»   →!          							; n ⇒ ! – similar to the CoDeKey mapping (@co0);`!` is the hardest reach.
<H>+    = «⌃o»  α^o         							; N ⇒ Ctrl+o – "Open" in many programs
;<e>     = «#e»  α#e         							; e ⇒ Win+e – Open Windows Explorer (Windows overrides Win+QWE_L as ScreenLock!)
;<E>+    = «#e»  α#e         							; E ⇒ Win+e – Open Windows Explorer
<n>     = «+↓»  α{Down}{Home 2}+{Up}    				; i ⇒ Select the current line (Down/Up ⇒ End to exclude the final line break)
<N>+    = «+↓»  α{End}{Home 2}+{End}    				; I ⇒ Select the current line                  (exclude the final line break)
<i>     = « ⌫ʷ» ¶WBS        							; o ⇒ Back*2(?) then Ctrl+Back. 	; eD WIP: Does this work with EPKL timing?
<I>+    = « ⌦ʷ» ¶WDL        							; O ⇒ Ctrl+Delete - delete next word

<q>     = «⌃z»  α^z         							; z ⇒ Undo
<Q>+    = «⌃Z»  α^+z        							; Z ⇒ Redo (could also use Ctrl+Y in many cases)
;<x>     = «⌃x»  α^x         							; x ⇒ Cut
;<X>+    = «⌃X»  α{Home 2}+{Down}^x  					; X ⇒ Cut the current line
<m>     = «⌃c»  α^c         							; c ⇒ Copy
<M>+    = «⌃C»  α{Home 2}+{Down}^c{Up}  				; C ⇒ Copy the current line
<w>     = «⌃v»  α^v         							; v ⇒ Paste
<W>+    = «#v»  α#v         							; V ⇒ Win Paste Clipboard (Win+v)
<v>     = «\>»   α¢[Run("Cmd")]¢    					; b ⇒ Run/Open a specified dir or other target (e.g.,"Explorer %UserProfile%"). Here, Cmd.
<V>+    = «⎔»   α¢[Run("Code")]¢    					; B ⇒ Run VS Code («⎔» is a "Software Function" glyph; consider 🏃 🎬 📁 📂 📓 🗊 🧰 🔨 🔧 🛠 …)
;<k>     = «Cap» α{CapsLock} 							; k ⇒ CapsLock
;<K>+    = «Cap» α{CapsLock} 							; K ⇒ CapsLock (need both unshifted and shifted letter to switch it on/off)
<y>     = «PgD» α{PgDn}     							; m ⇒ PageDn
<Y>+    = «End» α^{End}     							; M ⇒ Ctrl+End  - End of document
