;
;;  ================================================================================================================================================================
;;  Regular Expression definitions for the Compose Import Module
;;  for EPiKaL Portable Keyboard Layout (EPKL) by Øystein "DreymaR" Bech-Aase (2015-), based on PKL by Máté Farkas (2008-2010).
;;  ================================================================================================================================================================
;
;;  The sections contain a number of RegEx [ needle,result ] pairs to be played out on a string in order.
;;  The keys are for reference, but if a key starts with 'sr' a simple search-and-replace is performed.
;;  NOTE: Using AHK IniRead, if there are double quotes surrounding the whole entry they'll get stripped
;;        Therefore I've used curly quotes around the needle/result entries. Any character will work.
;

;temp     = ”” 	→ ”” 			; 
;;  title    = ”needle” → ”replaceText”
[KeySyms]
;;  Use the keysyms.txt file by Markus Kuhn, which tabulates X keysyms vs Unicode points
StripCom = ”Us)\s*/\*.*\*/” 			→ ”” 				; Remove C style /* comments */ (? or U) lazy match; s) dotall mode matches newlines)
WinCRLF  = ”[ \t]*\R” 					→ ”\r\n” 			; Normalize line endings to Windows CRLF format EPKL substitutes `r`n for \r\n here
RemOther = ”Um)^(?!0x[[:xdigit:]]{4,5} ).*$” 	→ ”” 		; Blank out lines not starting with the desired string (ungreedy multiline; negative lookahead)
RemEmpty = ”\R([ \t]*\R)+”  			→ ”\r\n” 			; Strip empty and whitespace-only lines
RemFirst = ”^\R*” 						→ ”” 				; The first empty line wasn't removed above
ConvDefs = ”0x\S{4,5}\s*(U\S{4,5})\s*[.du]\s*#\s*(\S*)” → ”$2 = $1” 	; Convert keysym definitions to .ini format key,val pairs. Use [.du] regular/duplicate/unicode.
CommDefs = ”(0x\S{4,5}\s*U\S{4,5}\s*[ofr].*)” → ”;$1” 		; Comment out the entries that are [ofr] obsolete/function/remove

[XCompose]
WinCRLF  = ”[ \t]*\R” 					→ ”\r\n” 			; Normalize line endings to Windows CRLF format EPKL substitutes `r`n for \r\n here
RemOther = ”Um)^(?!<Multi_key>).*$” 	→ ”” 				; Blank out lines not starting with the desired string (ungreedy multiline; negative lookahead)
RemEmpty = ”\R([ \t]*\R)+”  			→ ”\r\n” 			; Strip empty and whitespace-only lines
RemFirst = ”^\R*” 						→ ”” 				; The first empty line wasn't removed above
;;  Convert compose entries, adding key names in the comment, for 4,3,2(,1?) lengths
;BackSlsh = ”"\\\\"” 					→ ”"\"” 			; The \\ escaped entry didn't work with EPKL compose originally. Now it's valid.
MultMult = ”<Multi_key>(.<.+>.<Multi_key>)+?” → ”<Multi_key>” 	; Some composes have, e.g., © <_> © <_> <.> <O> : "Ȱ". We'll just ignore the extra (<_> ©)+ in that sequence.
ConvCmp4 = ”<Multi_key>.<(\S*)>\s*<(\S*)>\s*<(\S*)>\s*<(\S*)>\s*: [U"](\S*)"\s*(.*)” → ”<$1>_<$2>_<$3>_<$4>  =   $5   \t; [$1] + [$2] + [$3] + [$4] ⇒  $6”
ConvCmp3 =     ”<Multi_key>.<(\S*)>\s*<(\S*)>\s*<(\S*)>\s*([§]?): [U"](\S*)"\s*(.*)” →      ”<$1>_<$2>_<$3>  =   $5   \t; [$1] + [$2] + [$3] ⇒  $6”
ConvCmp2 =         ”<Multi_key>.<(\S*)>\s*<(\S*)>\s*([§]?)([§]?): [U"](\S*)"\s*(.*)” →           ”<$1>_<$2>  =   $5   \t; [$1] + [$2] ⇒  $6” 	; [§] dummy patterns to count to $4
CommOut  = ”m)^<Multi_key>” → ”;;  <Multi_key>” 			; Some lines in the compose file are malformed and/or misinterpreted. Comment them out.
Unicode  = ”<U([[:xdigit:]]{4,5})>” 	→ ”U$1” 			; Unicode points may be specified as U####. But now we'll use the U#### format so that's fine.
;AsciiAsc = ”\[ascii” 					→ ”[ASC” 			; Shorten string in names. We'll do that inline, for ASC/Gre_/Ara_/Heb_/Cyr_/Ukr_ etc.
;;  Done inline by the Compose Import Module: Replace keysyms with hex codes for keys. Pad keys to ~30 spaces. Pad keysyms in comments for ease of reading.

[KeySymDef]
;;  The X11 keysymdef.h file contains a lot of non-Unicode definitions. Therefore, it won't work for advanced characters like Greek etc.
StripCom = ”Us)\s*/\*.*\*/” 			→ ”” 				; Remove C style /* comments */ (? or U) lazy match; s) dotall mode matches newlines)
WinCRLF  = ”[ \t]*\R” 					→ ”\r\n” 			; Normalize line endings to Windows CRLF format EPKL substitutes `r`n for \r\n here
RemOther = ”Um)^(?!#define XK_).*$” 	→ ”” 				; Blank out lines not starting with the desired string (ungreedy multiline; negative lookahead)
RemEmpty = ”\R([ \t]*\R)+”  			→ ”\r\n” 			; Strip empty and whitespace-only lines
RemFirst = ”^\R*” 						→ ”” 				; The first empty line wasn't removed above
ConvDefs = ”#define XK_(\S*\s*)  (0x\S*)” → ”${1}= ${2}” 	; Convert XK definitions to .ini format key,val pairs (AHK matches use the ${#} style)
No0x100_ = ”0x100([[:xdigit:]]{4})” 	→ ”0x$1” 			; X keysymdef.h uses values like 0x100#### for U+####. There are no 0x101#### values (yet).
VoidSym  = ”(VoidSymbol )” 				→ ”;$1” 			; VoidSymbol isn't used as a KeySym in EPKL Compose
MultKey  = ”(Multi_key  )” 				→ ”;$1” 			; Multi_key  isn't used as a KeySym in EPKL Compose
